name: Build Docker and Deploy

on:
  workflow_run:
    workflows: ['Database Setup and Migration']
    types:
      - completed
    branches: [main]
  # Backup trigger for manual deployment
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'prod'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment: ${{ github.event.inputs.environment || 'prod' }}

    env:
      SUBDOMAIN: ${{ vars.SUBDOMAIN || 'web-app-template.matuko.xyz' }}
      APP_NAME: ${{ vars.APP_NAME || 'web-app-template' }}
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      VM_HOST: ${{ vars.VM_HOST }}
      VM_USER: ${{ vars.VM_USER }}
      VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
      LETSENCRYPT_EMAIL: ${{ vars.LETSENCRYPT_EMAIL || 'hello@matuko.xyz' }}

    steps:
      - name: Debug workflow trigger
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Workflow run status: ${{ github.event.workflow_run.status }}"
          echo "Workflow run name: ${{ github.event.workflow_run.name }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npm audit fix --force || true

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: mattposch/web-app-template

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create target folder
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USER }}
          key: ${{ env.VM_SSH_KEY }}
          script: |
            mkdir -p /opt/apps/${{ env.APP_NAME }}

      - name: Copy docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USER }}
          key: ${{ env.VM_SSH_KEY }}
          source: docker-compose.yml
          target: /opt/apps/${{ env.APP_NAME }}

      - name: Deploy container with env vars
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USER }}
          key: ${{ env.VM_SSH_KEY }}
          script: |
            cd /opt/apps/${{ env.APP_NAME }}

            export VIRTUAL_HOST=${{ env.SUBDOMAIN }}
            export LETSENCRYPT_HOST=${{ env.SUBDOMAIN }}
            export LETSENCRYPT_EMAIL=${{ env.LETSENCRYPT_EMAIL }}
            export APP_NAME=${{ env.APP_NAME }}

            docker compose pull || true
            docker compose up -d
